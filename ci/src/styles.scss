/* You can add global styles to this file, and also import other style files */
@import './colors';
@import '~@angular/material/theming';
@import url('//fonts.googleapis.com/icon?family=Material+Icons');

// import fonts
@import url('https://fonts.googleapis.com/css?family=Quicksand:500');
@import url('https://fonts.googleapis.com/css?family=Open+Sans:300,600');

@include mat-core();

body {
    font-weight: normal;
    background-color: #ddd;
    font-family: 'Open Sans';
    font-weight: 300;
    font-size: 32pt;
    color: $navy;
}

h1, h2, h3, h4 {
    font-family: 'Open Sans';
    font-weight: 600;
}

.title {
  font-family: 'Quicksand';
  font-weight: 500;
  font-size: 60pt;
  color: $navy;
}

.button, .mat-button {
  font-family: 'Quicksand'!important;
  font-weight: 500 !important; 
  font-size: 48pt !important;
  color: $white !important;
  background-color: $teal !important;
  border-radius: 50px !important;
  padding: 22px !important;
  min-width: 250px !important;
}

.completion-button {
  background-color: $gold !important;
}

.moving-forward-button {
  background-color: $green !important;
}

.error-button {
  background-color: $red !important;
}

.mat-button-wrapper {
  width: 100%;
  height: 100%;
  background-color: transparent;
}

.subtitle {
  font-family: 'Quicksand';
  font-weight: 500;
  font-size: 36pt;
  color: $navy;
}

.question:not([class^='mjx']), .question *:not([class^='mjx']), .jumbotron:not([class^='mjx']) .question p:not([class^='mjx']) {
  font-family: 'Open Sans';
  font-weight: 600;
  font-size: 32pt;
  color: $navy;
} 

.answer:not([class^='mjx']), .answer *:not([class^='mjx']), .jumbotron:not([class^='mjx']) .answer p:not([class^='mjx']) {
  font-family: 'Open Sans';
  font-weight: 300;
  font-size: 32pt;
  color: $navy;
}

.topic-title {
  font-family: 'Open Sans';
  font-weight: 600;
  font-size: 21pt;
  color: $navy;
} 

.topic-progress {
  font-family: 'Open Sans';
  font-weight: 300;
  font-size: 21pt;
  color: $navy;
}

// add border radius to all cards
.mat-card {
    border-radius: 25px !important;
}

.help-block {
    font-size: 12px;
}

.circle-icon {
    background: #ffc0c0;
    width: 100px;
    height: 100px;
    border-radius: 50%;
    text-align: center;
    line-height: 100px;
    vertical-align: middle;
    padding: 20px 30px 20px 30px;
}
.icon-red {
    color: #ffc0c0;
}

.icon-dark-red {
    color: #c04040;
}

.icon-green {
    color: #c0ffc0;
}

.icon-dark-green {
    color: #40c040;
}

.circle-icon2 {
    background: #ffc0c0;
    padding:30px;
    border-radius: 50%;
}

.topic-img {
    width: 79px !important;
    height: 79px !important;
    margin: 17px 0px 17px 0px;
    border-radius: 8px;
    //background-image: url(/assets/images/default-icon.svg);
}

.greenButton {
    border: 2px solid;
    border-color: #40c040;
    border-radius: 25px;
    width:80px;
}
.arrow {

}
.arrowRowContainer {
    display: inline-block;
    box-shadow: 5px 5px 7px 0px black;
    background: 
    url(/assets/images/arrow.png);
    background-size: 100% 100%;
}
.arrowButtonContainer {
    width:250px;
    height: 120px;
    padding: 25px;
    margin: 1px;

}
.greenout {
    background: 
    linear-gradient(
        rgba(0, 128, 0, 0.3),
        rgba(0, 128, 0, 0.3)
    );
    background-size: 100% 100%;

}
.yellowout {
    background: 
    linear-gradient(
      rgba(128, 128, 0, 0.3), 
      rgba(128, 128, 0, 0.3)
    );
    background-size: 100% 100%;
}

.redout {
    background: 
    linear-gradient(
      rgba(128, 0, 0, 0.7), 
      rgba(128, 0, 0, 0.7)
    );
    background-size: 100% 100%;
}

.fill-remaining-space {
  // This fills the remaining space, by using flexbox. 
  // Every toolbar row uses a flexbox row layout.
  flex: 1 1 auto;
}
.radio-group {
    display: inline-flex;
    flex-direction: column;
}

.radio-button {
    margin: 5px;
}

.selected-value {
    margin: 15px 0;
}

.topicButton {
    position: relative;
    width: 100%;
    height: 100%;
    border-radius: 8px;
}

.shadow {
    margin: 7px 7px 9px 8px;
    box-shadow: 4px 4px 5px 2px black;
}

.bottom_progress {
    position: absolute; 
    bottom: 0; 
    width: 100%
}

.center {
    margin: auto;
    width: 50%;
}
.width150 {
    width: 150px;
}

.chart-value-label {
  font-size: 16px;
  font-weight: bold;
}

@media screen and (max-width: 600px) {
    .container, .topics-container, .topic {
        margin: 0 !important;
        padding: 0 !important;
    }

    .container, .topics-container {
        width: 100%;
    }

    .backButton, .lesson-progress {
        margin: 0 8px;  
    }

    .lesson-progress {
        width: calc(100% - 16px) !important; 
    }
}

@media screen and (max-width: 350px) { 
    .level, .unit {
        margin: 6px !important;
        padding: 6px !important;
    }
    .backButton, .lesson-progress {
        margin: 0 6px;  
    }
    .continue-button, .error-button, .send-button, .cancel-button  {
        margin: 4px !important;
        padding: 2px !important;
    }
}


/** THEMING */
$mat-navy: (
    50: #e0e5e8,
    100: #b3bec6,
    200: #8093a1,
    300: #4d677b,
    400: #26475e,
    500: #002642,
    600: #00223c,
    700: #001c33,
    800: #00172b,
    900: #000d1d,
    A100: #5b8bff,
    A200: #2867ff,
    A400: #0048f4,
    A700: #0040da,
    contrast: (
        50: $black-87-opacity,
        100: $black-87-opacity,
        200: $black-87-opacity,
        300: $black-87-opacity,
        400: $black-87-opacity,
        500: white,
        600: white,
        700: white,
        800: white,
        900: white,
        A100: $black-87-opacity,
        A200: $black-87-opacity,
        A400: $black-87-opacity,
        A700: white
    )
);

$mat-teal: (
    50: #e6f6f8,
    100: #c0e9ec,
    200: #97dbe0,
    300: #6dcdd4,
    400: #4dc2ca,
    500: #2eb7c1,
    600: #29b0bb,
    700: #23a7b3,
    800: #1d9fab,
    900: #12909e,
    A100: #cffaff,
    A200: #9cf4ff,
    A400: #69efff,
    A700: #50ecff,
    contrast: (
        50: $black-87-opacity,
        100: $black-87-opacity,
        200: $black-87-opacity,
        300: $black-87-opacity,
        400: $black-87-opacity,
        500: white,
        600: white,
        700: white,
        800: white,
        900: white,
        A100: $black-87-opacity,
        A200: $black-87-opacity,
        A400: $black-87-opacity,
        A700: white
    )
);

$mat-gold: (
    50: #fff6e7,
    100: #ffe8c2,
    200: #ffd899,
    300: #ffc870,
    400: #ffbd52,
    500: #ffb133,
    600: #ffaa2e,
    700: #ffa127,
    800: #ff9820,
    900: #ff8814,
    A100: #ffffff,
    A200: #fffdfb,
    A400: #ffe1c8,
    A700: #ffd3ae,
    contrast: (
        50: $black-87-opacity,
        100: $black-87-opacity,
        200: $black-87-opacity,
        300: $black-87-opacity,
        400: $black-87-opacity,
        500: white,
        600: white,
        700: white,
        800: white,
        900: white,
        A100: $black-87-opacity,
        A200: $black-87-opacity,
        A400: $black-87-opacity,
        A700: white
    )
);

$primary: mat-palette($mat-navy);
$accent:  mat-palette($mat-teal);
$warn:    mat-palette($mat-gold);
$theme: mat-light-theme($primary, $accent, $warn);
@include angular-material-theme($theme);

// Define an alternate theme
$mat-green: (
    50: #e2f4e6,
    100: #b8e3c0,
    200: #88d097,
    300: #58bd6d,
    400: #35ae4d,
    500: #11a02e,
    600: #0f9829,
    700: #0c8e23,
    800: #0a841d,
    900: #057312,
    A100: #a2ffa9,
    A200: #6fff79,
    A400: #3cff4a,
    A700: #23ff32,
    contrast: (
        50: $black-87-opacity,
        100: $black-87-opacity,
        200: $black-87-opacity,
        300: $black-87-opacity,
        400: $black-87-opacity,
        500: white,
        600: white,
        700: white,
        800: white,
        900: white,
        A100: $black-87-opacity,
        A200: $black-87-opacity,
        A400: $black-87-opacity,
        A700: white
    )
);
$mat-red: (
    50: #fde4e5,
    100: #fabbbd,
    200: #f68e92,
    300: #f26066,
    400: #f03e45,
    500: #ed1c24,
    600: #eb1920,
    700: #e8141b,
    800: #e51116,
    900: #e0090d,
    A100: #ffffff,
    A200: #ffd7d7,
    A400: #ffa4a5,
    A700: #ff8b8c,
    contrast: (
        50: $black-87-opacity,
        100: $black-87-opacity,
        200: $black-87-opacity,
        300: $black-87-opacity,
        400: $black-87-opacity,
        500: white,
        600: white,
        700: white,
        800: white,
        900: white,
        A100: $black-87-opacity,
        A200: $black-87-opacity,
        A400: $black-87-opacity,
        A700: white
    )
);
$grey-primary: mat-palette($mat-grey, 700);
$grey-accent:  mat-palette($mat-green);
$grey-warn: mat-palette($mat-red);
$grey-theme:   mat-light-theme($grey-primary, $grey-accent, $grey-warn);
/* Include the alternative theme styles inside of a block with a CSS class. You can make this
CSS class whatever you want. Any component inside of an element with
.grey-theme class will be affected by this alternate theme instead of the default theme. */
.grey-theme {
  @include angular-material-theme($grey-theme);
}
